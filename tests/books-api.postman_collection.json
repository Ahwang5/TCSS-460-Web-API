{
  "info": {
    "name": "Books API Beta Sprint Tests",
    "_postman_id": "7f8d9fae-1c3b-4b2a-8f5c-123456789abc",
    "description": "Collection for Beta Sprint tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Login",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has token\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('accessToken');",
              "    pm.environment.set('auth_token', jsonData.accessToken);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"email\": \"testuser@test.com\",\n    \"password\": \"newpassword123\"\n}"
        },
        "url": {
          "raw": "http://localhost:4001/login",
          "protocol": "http",
          "host": ["localhost"],
          "port": "4001",
          "path": ["login"]
        }
      }
    },
    {
      "name": "Change Password",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has success message\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('message');",
              "    pm.expect(jsonData.message).to.equal('Password updated successfully');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{auth_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"current_password\": \"newpassword123\",\n    \"new_password\": \"password123\"\n}"
        },
        "url": {
          "raw": "http://localhost:4001/users/password",
          "protocol": "http",
          "host": ["localhost"],
          "port": "4001",
          "path": ["users", "password"]
        }
      }
    },
    {
      "name": "Change Password - Invalid Current Password",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "pm.test(\"Response has error message\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('message');",
              "    pm.expect(jsonData.message).to.equal('Current password is incorrect');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{auth_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"current_password\": \"wrongpassword\",\n    \"new_password\": \"newpassword123\"\n}"
        },
        "url": {
          "raw": "http://localhost:4001/users/password",
          "protocol": "http",
          "host": ["localhost"],
          "port": "4001",
          "path": ["users", "password"]
        }
      }
    },
    {
      "name": "Change Password - Invalid New Password",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "pm.test(\"Response has error message\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('message');",
              "    pm.expect(jsonData.message).to.equal('New password must be at least 8 characters long');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{auth_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"current_password\": \"password123\",\n    \"new_password\": \"short\"\n}"
        },
        "url": {
          "raw": "http://localhost:4001/users/password",
          "protocol": "http",
          "host": ["localhost"],
          "port": "4001",
          "path": ["users", "password"]
        }
      }
    },
    {
      "name": "Change Password - No Token",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 401\", function () {",
              "    pm.response.to.have.status(401);",
              "});",
              "",
              "pm.test(\"Response has error message\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('message');",
              "    pm.expect(jsonData.message).to.equal('No token provided');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"current_password\": \"password123\",\n    \"new_password\": \"newpassword123\"\n}"
        },
        "url": {
          "raw": "http://localhost:4001/users/password",
          "protocol": "http",
          "host": ["localhost"],
          "port": "4001",
          "path": ["users", "password"]
        }
      }
    },
    {
      "name": "Get Book by ISBN",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/books/isbn/9780439554930",
          "host": ["{{baseUrl}}"],
          "path": ["books", "isbn", "9780439554930"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has book object\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property(\"book\");",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get Books by Author",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/books/author/J.K.%20Rowling",
          "host": ["{{baseUrl}}"],
          "path": ["books", "author", "J.K.%20Rowling"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has books array\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property(\"books\");",
              "    pm.expect(jsonData.books).to.be.an(\"array\");",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Create Book",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"isbn13\":9780141036144,\"authors\":\"Test Author\",\"publication_year\":2022,\"original_title\":\"Original Test Book\",\"title\":\"Test Book\",\"image_url\":\"http://example.com/image.jpg\",\"small_image_url\":\"http://example.com/small.jpg\"}"
        },
        "url": {
          "raw": "{{baseUrl}}/books",
          "host": ["{{baseUrl}}"],
          "path": ["books"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });",
              "pm.test(\"Response has book object\", function () { pm.expect(pm.response.json()).to.have.property(\"book\"); });"
            ]
          }
        }
      ]
    },
    {
      "name": "Update Book Rating",
      "request": {
        "method": "PATCH",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"book_id\":2,\"rating\":4}"
        },
        "url": {
          "raw": "{{baseUrl}}/books/rating",
          "host": ["{{baseUrl}}"],
          "path": ["books", "rating"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
              "pm.test(\"Response has rating object\", function () { pm.expect(pm.response.json()).to.have.property(\"rating\"); });",
              "pm.test(\"Rating value is correct\", function () { pm.expect(parseFloat(pm.response.json().rating.rating)).to.equal(4); });"
            ]
          }
        }
      ]
    },
    {
      "name": "Update Book Rating - Invalid Book",
      "request": {
        "method": "PATCH",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"book_id\":999999,\"rating\":4.5}"
        },
        "url": {
          "raw": "{{baseUrl}}/books/rating",
          "host": ["{{baseUrl}}"],
          "path": ["books", "rating"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });",
              "pm.test(\"Response has error message\", function () { pm.expect(pm.response.json()).to.have.property(\"message\"); });"
            ]
          }
        }
      ]
    },
    {
      "name": "Update Book Rating - Invalid Rating",
      "request": {
        "method": "PATCH",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"book_id\":2,\"rating\":6}"
        },
        "url": {
          "raw": "{{baseUrl}}/books/rating",
          "host": ["{{baseUrl}}"],
          "path": ["books", "rating"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });",
              "pm.test(\"Response has error message\", function () { pm.expect(pm.response.json()).to.have.property(\"message\"); });"
            ]
          }
        }
      ]
    },
    {
      "name": "Get All Books with Pagination",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/books?page=1&limit=5",
          "host": ["{{baseUrl}}"],
          "path": ["books"],
          "query": [
            {
              "key": "page",
              "value": "1"
            },
            {
              "key": "limit",
              "value": "5"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
              "pm.test(\"Response has books array\", function () { pm.expect(pm.response.json()).to.have.property(\"books\"); });",
              "pm.test(\"Response has pagination info\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property(\"total\");",
              "    pm.expect(jsonData).to.have.property(\"page\");",
              "    pm.expect(jsonData).to.have.property(\"limit\");",
              "    pm.expect(jsonData).to.have.property(\"pages\");",
              "});",
              "pm.test(\"Books array length matches limit\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.books.length).to.equal(jsonData.limit);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get All Books with Default Pagination",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/books",
          "host": ["{{baseUrl}}"],
          "path": ["books"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
              "pm.test(\"Response has books array\", function () { pm.expect(pm.response.json()).to.have.property(\"books\"); });",
              "pm.test(\"Default limit is 10\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.limit).to.equal(10);",
              "});"
            ]
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:4001"
    }
  ]
} 